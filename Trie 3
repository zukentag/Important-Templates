struct Node{
    
    Node* links[2];
    
    bool cointainsKey(int bit)
    {
        return (links[bit]!=NULL);
    }
    
    void put(int i,Node* node)
    {
        links[i]=node;
    }
    
    Node * get(int i)
    {
        return links[i];
    }
    
};
class Trie
{
    Node * root;
    
    public:
    
    Trie()
    {
        root=new Node();
    }
    
    void insert(int num)
    {
        Node* node=root;
        
        for(int i=31;i>=0;i--)
        {
            int bit=(num>>i)&1;
            
            if(!node->cointainsKey(bit))
            {
                node->put(bit,new Node());
            }
            node=node->get(bit);
        }
    }
    int findMax(int num)
    {
        Node* node=root;
        
        int maxNum=0;
        for(int i=31;i>=0;i--)
        {
            int bit=(num>>i)&1;
           
            if(node->cointainsKey(!bit))
            {
                maxNum=maxNum|(1<<i);
                node=node->get(!bit);    
            }
            else
            {
                node=node->get(bit);    
            }
            
        }
        return maxNum;
    }
};
